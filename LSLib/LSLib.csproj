<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>disable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Title>LSLib</Title>
    <Product>LSLib</Product>
    <Copyright>Copyright © Norbyte 2012-2023</Copyright>
    <PlatformTarget>x64</PlatformTarget>
    <Authors>Norbyte</Authors>
    <Description>Tools for manipulating Divinity Original Sin and Baldur's Gate 3 files</Description>
    <Version>1.18.6-nightly-1</Version>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="lz4net">
      <Version>1.0.15.93</Version>
    </PackageReference>
    <PackageReference Include="Newtonsoft.Json">
      <Version>13.0.3</Version>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\LSLibNative\LSLibNative.vcxproj" PrivateAssets="All" />
    <ProjectReference Include="..\OpenTK\OpenTK.csproj" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="QUT.ShiftReduceParser">
      <HintPath>..\External\gppg\binaries\QUT.ShiftReduceParser.dll</HintPath>
    </Reference>
  </ItemGroup>

  <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
    <Exec Command="&quot;$(SolutionDir)\external\gppg\binaries\GpLex&quot; /out:&quot;$(ProjectDir)\LS\Story\GoalParser\Goal.lex.cs&quot; &quot;$(ProjectDir)\LS\Story\GoalParser\Goal.lex&quot;&#xD;&#xA;    &quot;$(SolutionDir)\external\gppg\binaries\Gppg&quot; /out:&quot;$(ProjectDir)\LS\Story\GoalParser\Goal.yy.cs&quot; &quot;$(ProjectDir)\LS\Story\GoalParser\Goal.yy&quot;&#xD;&#xA;&#xD;&#xA;    &quot;$(SolutionDir)\external\gppg\binaries\GpLex&quot; /out:&quot;$(ProjectDir)\LS\Story\HeaderParser\StoryHeader.lex.cs&quot; &quot;$(ProjectDir)\LS\Story\HeaderParser\StoryHeader.lex&quot;&#xD;&#xA;    &quot;$(SolutionDir)\external\gppg\binaries\Gppg&quot; /out:&quot;$(ProjectDir)\LS\Story\HeaderParser\StoryHeader.yy.cs&quot; &quot;$(ProjectDir)\LS\Story\HeaderParser\StoryHeader.yy&quot;&#xD;&#xA;&#xD;&#xA;    &quot;$(SolutionDir)\external\gppg\binaries\GpLex&quot; /out:&quot;$(ProjectDir)\LS\Stats\Parser\Stat.lex.cs&quot; &quot;$(ProjectDir)\LS\Stats\Parser\Stat.lex&quot;&#xD;&#xA;    &quot;$(SolutionDir)\external\gppg\binaries\Gppg&quot; /out:&quot;$(ProjectDir)\LS\Stats\Parser\Stat.yy.cs&quot; &quot;$(ProjectDir)\LS\Stats\Parser\Stat.yy&quot;&#xD;&#xA;&#xD;&#xA;    &quot;$(SolutionDir)\external\gppg\binaries\GpLex&quot; /out:&quot;$(ProjectDir)\LS\Stats\Parser\StatProperty.lex.cs&quot; &quot;$(ProjectDir)\LS\Stats\Parser\StatProperty.lex&quot;&#xD;&#xA;    &quot;$(SolutionDir)\external\gppg\binaries\Gppg&quot; /out:&quot;$(ProjectDir)\LS\Stats\Parser\StatProperty.yy.cs&quot; &quot;$(ProjectDir)\LS\Stats\Parser\StatProperty.yy&quot;" />
  </Target>

  <!-- NuGet -->
  <ItemGroup>
    <Content Include="..\External\gppg\binaries\QUT.ShiftReduceParser.dll">
      <Pack>true</Pack>
      <PackagePath>lib\$(TargetFramework)</PackagePath>
    </Content>
    <Content Include="$(NetCoreTargetingPackRoot)\Microsoft.NETCore.App.Host.$(NETCoreSdkRuntimeIdentifier)\$(BundledNETCoreAppPackageVersion)\runtimes\$(NETCoreSdkRuntimeIdentifier)\native\ijwhost.dll" Link="ijwhost.dll">
      <Pack>true</Pack>
      <PackagePath>lib\$(TargetFramework)</PackagePath>
    </Content>
  </ItemGroup>

  <PropertyGroup>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
    <IncludeSymbols>True</IncludeSymbols>
  </PropertyGroup>

  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
    <ItemGroup>
      <_ReferenceCopyLocalPaths Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')-&gt;WithMetadataValue('PrivateAssets', 'All'))" />
      <BuildOutputInPackage Include="@(_ReferenceCopyLocalPaths)" TargetPath="%(_ReferenceCopyLocalPaths.DestinationSubDirectory)" />
    </ItemGroup>
  </Target>
</Project>
